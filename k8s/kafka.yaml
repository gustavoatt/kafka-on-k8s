apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
  namespace: kafka-gustavo
spec:
  ports:
  - port: 9092
    name: broker
  selector:
    app: kafka-broker
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-headless
  namespace: kafka-gustavo
spec:
  ports:
  - port: 9092
    name: broker
  clusterIP: None
  selector:
    app: kafka-broker
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka-broker
  namespace: kafka-gustavo
spec:
  serviceName: kafka-broker-headless
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka-broker
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 10
      containers:
      - name: broker
        image: confluentinc/cp-kafka:3.2.0
        # Same hack as in zookeeper.yaml to get the ordinal from this stateful
        # set. KAFKA_ADVERTISED_LISTENERS has to bind to the public DNS name
        # of each broker for correct access.
        command:
        - sh
        - -c
        - 'export KAFKA_BROKER_ID=$(hostname | grep -o "[[:digit:]]*$")
           && export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://kafka-broker-$KAFKA_BROKER_ID.kafka-broker-headless:9092"
           && /etc/confluent/docker/run'
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_LOG_DIRS
          value: /var/lib/kafka/data/topics
        ports:
          - containerPort: 9092
            name: broker
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - 'echo "" | nc -w 1 127.0.0.1 9092'
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
